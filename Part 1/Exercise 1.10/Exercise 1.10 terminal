Microsoft Windows [Version 10.0.19045.4412]
(c) Microsoft Corporation. Wszelkie prawa zastrzeżone.

C:\Windows\System32>docker build . -t web-server
[+] Building 1.1s (6/6) FINISHED                                                                         docker:default
 => [internal] load build definition from Dockerfile                                                               0.0s
 => => transferring dockerfile: 93B                                                                                0.0s
 => [internal] load metadata for docker.io/devopsdockeruh/simple-web-service:alpine                                1.0s
 => [auth] devopsdockeruh/simple-web-service:pull token for registry-1.docker.io                                   0.0s
 => [internal] load .dockerignore                                                                                  0.0s
 => => transferring context: 2B                                                                                    0.0s
 => CACHED [1/1] FROM docker.io/devopsdockeruh/simple-web-service:alpine@sha256:dd4d367476f86b7d7579d3379fe446ae5  0.0s
 => exporting to image                                                                                             0.0s
 => => exporting layers                                                                                            0.0s
 => => writing image sha256:b270552b2b2ffb0226236922340399bbe75cf3e056bbe7003a8c0ee8c16f4391                       0.0s
 => => naming to docker.io/library/web-server                                                                      0.0s

View build details: docker-desktop://dashboard/build/default/default/zp6essishwj9ppbrrzwnfsq3g

What's Next?
  View a summary of image vulnerabilities and recommendations → docker scout quickview

C:\Windows\System32>docker run -p 127.0.0.1:3456:8080 web-server
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:   export GIN_MODE=release
 - using code:  gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /*path                    --> server.Start.func1 (3 handlers)
[GIN-debug] Listening and serving HTTP on :8080
[GIN] 2024/06/05 - 13:51:41 | 200 |       50.53µs |      172.17.0.1 | GET      "/"
[GIN] 2024/06/05 - 13:51:41 | 200 |      19.059µs |      172.17.0.1 | GET      "/favicon.ico"
